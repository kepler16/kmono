name: Release Binary ðŸ‘˜

on:
  workflow_run:
    workflows: ["Publish kmono ðŸ‘˜"]
    types:
      - completed
    branches:
      - master

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    outputs:
      release_exists: ${{ steps.check-release-exists.outputs.release_exists }}
      release_tag: ${{ steps.release-tag.outputs.release_tag }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-latest-xlarge]
        include:
        - os: ubuntu-latest
          binary-name: kmono-linux-amd64
        - os: macos-latest
          binary-name: kmono-macos-amd64
        - os: macos-latest-xlarge
          binary-name: kmono-macos-arm64

    env:
      GITHUB_USERNAME: ${{ secrets.ORG_GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.ORG_GITHUB_TOKEN }}

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout git repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch Tags
      run: git fetch --tags origin

    - name: Set output release tag
      id: release-tag
      run: echo "release_tag=$(git tag -l 'com.kepler16/kmono@*' | sort -V | tail -n 1)" >> $GITHUB_OUTPUT

    - name: Check gh release exists
      id: check-release-exists
      run: |
        if gh release view ${{ steps.release-tag.outputs.release_tag }} --json tagName; then
          echo "release_exists=true" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "release_exists=false" >> $GITHUB_OUTPUT
        fi

    - uses: extractions/setup-just@v1
    - uses: DeLaGuardo/setup-clojure@9.5
      with:
        cli: latest

    - uses: graalvm/setup-graalvm@v1
      with:
        java-version: '21'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - uses: s4u/maven-settings-action@v2.4.1
      with:
        githubServer: false
        servers: |
          [{"id": "github-kepler",
            "username": "${{ secrets.ORG_GITHUB_ACTOR }}",
            "password": "${{ secrets.ORG_GITHUB_TOKEN }}"},
           {"id": "github-kepler-kmono",
            "username": "${{ github.actor }}",
            "password": "${{ secrets.GITHUB_TOKEN }}"}]

    - name: Build Native Image
      run: just build-native ":snapshot?" false

    - name: Pack binary
      run: |
        tar -czf ${{ matrix.binary-name }}.tar.gz -C ./bin kmono

    - uses: actions/upload-artifact@v3
      with:
        name: kmono-native-images
        if-no-files-found: error
        path: ${{ matrix.binary-name }}.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.release_exists == 'false'
    env:
      GITHUB_USERNAME: ${{ secrets.ORG_GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.ORG_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Download Binary Artifacts
        uses: actions/download-artifact@v2
        with:
          name: kmono-native-images
          path: bin

      - name: Calculate checksums
        run: |
          for file in bin/*; do
            shasum -a 256 "$file" >> checksums.txt
          done

          mv checksums.txt bin/checksums.txt

      - name: GH Release
        run: |
          gh release create ${{ needs.build.outputs.release_tag }} bin/* \
            --title "${{ needs.build.outputs.release_tag }}"

